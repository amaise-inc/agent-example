# Example Connector Config
legali.example.iterations=1
spring.task.execution.pool.max-size=1
spring.task.execution.pool.core-size=1

# Run cleanup round to delete test legal cases
legali.example.cleanup=true

# Disable processing pipeline for development (do not use in production)
legali.default-metadata.legali.pipeline.disabled=true
legali.default-metadata.legali.uploader=example-agent

# Connection to the amaise Cloud
legali.auth-url=https://auth.eu.amaise.com
legali.api-url=https://agents.eu.amaise.com/agents/v1
legali.client-id=<>
legali.client-secret=<>

# Set departments and tenant ids
legali.example.tenants.department-1=ef99fd60-e06e-4e2a-99b5-01bc37f710ae
legali.example.tenants.department-2=526602b4-0e96-4c90-bc28-ce720c9c6521

# FileService: Use CLOUDFRONT to upload files directly to AWS.
# If there are network restrictions, you can use LEGALI to proxy via amaise API. This is not recommended.
legali.fileservice=CLOUDFRONT

#legali.request-connection-timeout-seconds=30
#legali.max-connection-retries=5
#legali.request-read-timeout-seconds=90
#legali.max-failed-heartbeats=5

# Proxy setup
#legali.http-proxy-host=localhost
#legali.http-proxy-port=3128

# Logging and Debugging
logging.level.root=INFO
logging.level.ch.legali.sdk.example=INFO
logging.level.ch.legali.sdk.services=INFO
logging.level.ch.legali.sdk.internal=INFO

# Debug HTTP connection
#logging.level.feign=DEBUG
#legali.feign-log-level=FULL

# Monitoring
server.port=8085
management.endpoints.web.exposure.include=health,prometheus
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.endpoint.health.group.readiness.include=readinessState,agent
